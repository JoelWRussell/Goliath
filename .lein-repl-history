@darwin.evolution.core
@darwin.evolution.core/latest
(first (sort-by :score (:genotype (:elite @darwin.evolution.core/latest))))
(:elite @darwin.evolution.core/latest)
(sort-by :complexity (:elite @darwin.evolution.core/latest))
(first (sort-by :complexity (:elite @darwin.evolution.core/latest)))
(first (sort-by :error (:elite @darwin.evolution.core/latest)))
(:genotype (first (sort-by :error (:elite @darwin.evolution.core/latest))))
end
(:genotype (first (sort-by :error (:elite @darwin.evolution.core/latest))))
(first (sort-by :error (:elite @darwin.evolution.core/latest)))
(:genotype (first (sort-by :error (:elite @darwin.evolution.core/latest))))
(first (sort-by :error (:elite @darwin.evolution.core/latest)))
(:genotype (first (sort-by :error (:elite @darwin.evolution.core/latest))))
(first (sort-by :error (:elite @darwin.evolution.core/latest)))
(nth (sort-by :complexity (:elite @darwin.evolution.core/latest)) 5 )
(nth (sort-by :complexity (:elite @darwin.evolution.core/latest)) 10 )
(nth (sort-by :complexity (:elite @darwin.evolution.core/latest)) 20 )
(nth (sort-by :complexity (:elite @darwin.evolution.core/latest)) 50)
(nth (sort-by :complexity (:elite @darwin.evolution.core/latest)) 100)
(nth (sort-by :complexity (:elite @darwin.evolution.core/latest)) 51)
(sort-by :complexity (:elite @darwin.evolution.core/latest))
(get :complexity 6 (sort-by :complexity (:elite @darwin.evolution.core/latest)))
(count (get :complexity 6 (sort-by :complexity (:elite @darwin.evolution.core/latest))))
(nth (sort-by :complexity (:elite @darwin.evolution.core/latest)) 18)
(first (sort-by :error (:elite @darwin.evolution.core/latest)))
(:genotype (first (sort-by :error (:elite @darwin.evolution.core/latest))))
(first (sort-by :error (:elite @darwin.evolution.core/latest)))
(def a [[0 1] [1 0] [2 0] [0 2]])
(filter #{[0 1]} a)
(first (sort-by :error (:elite @darwin.evolution.core/latest)))
(score (:genotype (first (sort-by :error (:elite @darwin.evolution.core/latest)))))
(goliath/score (:genotype (first (sort-by :error (:elite @darwin.evolution.core/latest)))))
#{:a [1 1 1 1] :b [3 5 6 2]}
(:a #{:a [1 1 1 1] :b [3 5 6 2]} )
(:b #{:a [1 1 1 1] :b [3 5 6 2]} )
( #{:a [1 1 1 1] :b [3 5 6 2]} :a)
( #{:a 1 :b 2} :a)
({:a 1 :b 2} :a)
({:[2 0 0 0] 1 :b 2} :[2 0 0 0])
({:a 1 :b 2} :a)
(def a [[0 1] [1 0] [2 0] [0 2] [0 1])
(def a [[0 1] [1 0] [2 0] [0 2] [0 1]])
(filter #{[0 1]} a)
(count (filter #{[0 1]} a))
(goliath/score (:genotype (first (sort-by :error (:elite @darwin.evolution.core/latest)))))
(score (:genotype (first (sort-by :error (:elite @darwin.evolution.core/latest)))))
(first (sort-by :error (:elite @darwin.evolution.core/latest)))
(conj {:a 1 :b 3 :c 4} {:a 2 :b 2 :c 3})
(+ {:a 1 :b 3 :c 4} {:a 2 :b 2 :c 3})
(union  {:a 1 :b 3 :c 4} {:a 2 :b 2 :c 3})
(merge  {:a 1 :b 3 :c 4} {:a 2 :b 2 :c 3})
(apply + [1 2 4 5] [2 4 2 5]]
(+ [ 1 3] [2 4])
(reduce [1 3] [3 5])
(reduce + [1 3] [3 5])
(first (sort-by :error (:elite @darwin.evolution.core/latest)))
(score (:genotype (first (sort-by :error (:elite @darwin.evolution.core/latest)))))
