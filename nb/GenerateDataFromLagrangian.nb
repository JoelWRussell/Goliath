(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    140104,       2697]
NotebookOptionsPosition[    137418,       2606]
NotebookOutlinePosition[    137800,       2623]
CellTagsIndexPosition[    137757,       2620]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Simulating Data", "Title",
 CellChangeTimes->{{3.665252844101945*^9, 3.665252847765542*^9}}],

Cell["\<\
This code allows you to generate data from a Lagrangian give the boundary \
conditions at 2 locations within the data.\
\>", "Text",
 CellChangeTimes->{{3.6653232701341534`*^9, 3.665323293938057*^9}}],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<VariationalMethods`\>\"", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "SetDirectory", "[", "\"\<C:/Users/User/Goliath/resources\>\"", "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.665216964434784*^9, 3.665217007062045*^9}}],

Cell[CellGroupData[{

Cell[TextData[StyleBox["SHO oscillator", "Chapter"]], "Section",
 CellChangeTimes->{{3.6586599593027573`*^9, 3.6586599666829624`*^9}, {
  3.6652098493736906`*^9, 3.6652098523147974`*^9}, {3.6652528554781075`*^9, 
  3.665252882144014*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"L", "[", 
    RowBox[{"th1_", ",", " ", "w1_"}], "]"}], ":=", " ", 
   RowBox[{
    RowBox[{"w1", "^", "2"}], " ", "-", " ", 
    RowBox[{"th1", "^", "2"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6586537159031615`*^9, 3.6586537644736257`*^9}, {
   3.6586542680393095`*^9, 3.6586542695403748`*^9}, 3.658655590115903*^9, {
   3.658655778766946*^9, 3.6586557833392124`*^9}, 3.6586559023075953`*^9, 
   3.658656019711851*^9, {3.65865616318163*^9, 3.658656175896629*^9}, 
   3.658656540589708*^9, 3.6586569142708683`*^9, 3.658656968816779*^9, 
   3.6586570396550245`*^9, {3.658658707960973*^9, 3.658658713020562*^9}, {
   3.658659060419589*^9, 3.658659114435053*^9}, {3.6586592108894987`*^9, 
   3.658659212966942*^9}, {3.6586592446444397`*^9, 3.658659246435711*^9}, {
   3.658659355873336*^9, 3.6586593920909977`*^9}, {3.658659534877283*^9, 
   3.6586595601352215`*^9}, {3.6586596080171843`*^9, 3.658659617424858*^9}, {
   3.665208604985362*^9, 3.6652086791212554`*^9}, {3.665238066774853*^9, 
   3.665238103771119*^9}, {3.6652528889278717`*^9, 3.6652529111146374`*^9}}],

Cell["Generate the Euler Equations", "Text",
 CellChangeTimes->{{3.658654209411753*^9, 3.658654214393259*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{"EulerEquations", "[", 
   RowBox[{
    RowBox[{"L", "[", 
     RowBox[{
      RowBox[{"th1", "[", "t", "]"}], ",", "  ", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"th1", "[", "t", "]"}], ",", "t"}], "]"}]}], "]"}], ",", " ", 
    RowBox[{"th1", "[", "t", "]"}], ",", " ", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.658653797652131*^9, 3.6586538261593523`*^9}, {
  3.65865422687311*^9, 3.658654227572606*^9}, {3.6652092456209354`*^9, 
  3.6652092507996116`*^9}, {3.6652381145897923`*^9, 3.6652381532472363`*^9}, {
  3.665252998990996*^9, 3.6652530142168026`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "2"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"th1", "[", "t", "]"}], "+", 
     RowBox[{
      SuperscriptBox["th1", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], ")"}]}], "\[Equal]", 
  "0"}]], "Output",
 CellChangeTimes->{
  3.6586538266096706`*^9, 3.6586542310060573`*^9, 3.658654276972645*^9, 
   3.658655597677266*^9, 3.6586557473156567`*^9, 3.6586557954167566`*^9, 
   3.658655910965726*^9, 3.65865603832607*^9, 3.658656180597965*^9, 
   3.6586565464058475`*^9, 3.658656919489539*^9, 3.658656972847652*^9, 
   3.6586570517746196`*^9, 3.658658771898347*^9, 3.658658840376951*^9, 
   3.658658983930501*^9, 3.658659262912388*^9, 3.6586594149502125`*^9, 
   3.658659494628745*^9, {3.6586595396336517`*^9, 3.6586595931706247`*^9}, 
   3.658659643413263*^9, 3.658659742185336*^9, 3.6586598017143326`*^9, 
   3.658660027187875*^9, {3.6586600589494195`*^9, 3.658660081570448*^9}, {
   3.658660121793996*^9, 3.6586601398718185`*^9}, 3.658660205555398*^9, 
   3.658660247826889*^9, 3.6652087455536346`*^9, 3.665209203921316*^9, 
   3.6652092515661345`*^9, 3.6652153692952833`*^9, 3.665217040243614*^9, 
   3.665223409389288*^9, 3.6652381566886787`*^9, {3.66525298772901*^9, 
   3.6652530153666277`*^9}, 3.665253055787306*^9, 3.665253201742552*^9, 
   3.665322377981174*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol1", "=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"sol", ",", " ", 
      RowBox[{
       RowBox[{"th1", "[", "0", "]"}], "\[Equal]", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"th1", "[", "1", "]"}], "\[Equal]", "1"}]}], "}"}], ",", " ", 
    RowBox[{"th1", "[", "t", "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "10.0"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.658653894638954*^9, 3.658653935838148*^9}, {
   3.65865398197488*^9, 3.6586539993762445`*^9}, {3.65865405974304*^9, 
   3.658654069911276*^9}, {3.658655681544752*^9, 3.6586557051404953`*^9}, {
   3.6586567692789927`*^9, 3.658656771115325*^9}, {3.6586568169097843`*^9, 
   3.6586568170879335`*^9}, {3.6652087940760503`*^9, 3.665208811111162*^9}, {
   3.665209210456953*^9, 3.6652092568278694`*^9}, {3.6652154029733925`*^9, 
   3.6652154031375165`*^9}, {3.6652382620478354`*^9, 3.665238291720912*^9}, {
   3.665253077709873*^9, 3.6652530854493604`*^9}, 3.665322369510191*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"th1", "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj5T/NoYAADwP1t+433D
3cQ/06KH59s08T8/lvq2a77VPw3Qz2CQ//E/UPQI4wkn4D/YbRJcUDvyPzg0
cm9ZVOU/p57sAsn68T/3vGVz/fHqP7g3G2z/LPE/r0FwQdgX8D/uWrvXzuXv
P07J8gTc7vI/hDD6Vu9G7D9JHOSKnbj1P8xGHtB82+c/GA6ZlmZS+D97ealb
jBTjP1IkE95ZJPs/CoSsQxCs2j9g2VCrVMb9P0E5SzYiY84/5ax+nYYtAEAe
/tax5lKsP1B/NwP4kwFAcdTepxVlwr8lIdIrbeICQN7qmslX1tS/MFVPcvdM
BEBz6gEyy2jgv+nuA5rgsAVATsadd+zK5b8MWJqEzfwGQJa354h9Oeq/ZVMT
jc9kCECOextVSUDuvygebljVtAlAu3pwn8mV8L8he6tB8CALQCHGilCuqfG/
xz0gDGqGDEAMknJx6C3yv9fPdpnn0w1ApVw8usMp8r8d9K9Eej0PQGzYQR5c
mvG/53NlWYhHEEB0QAJv2ZXwv5WgDgED7RBAyuY991BN7r9eFqk3iKARQK5x
itDETOq/3HO0Tw9IEkCFetqJwtXlv3Uasfag/RJA2Tk3mXFX4L/lc0kO4q8T
QPKwCJ7Q5dS/CrVSByVWFEDCW0ZeGajCv0o/TY9yChVAkvqdS4Piqz8/sbj4
wbIVQBUpGis6t84/C9a/0sBXFkBN+VxWs5jaP/JDuDvKChdA4qcbYWYA4z+O
mSGG1bEXQMyJCfy6zec/RTh8X+tmGED8cV1tsErsP7G+RxoDEBlAAa7EJjWw
7z/0965FyrUZQFAqwHxGF/E/UnoHAJxpGkD5Csu/6u/xP2Xk0JtvERtAeKGv
CcI68j+Tl4vGTccbQP8GOtqr/vE/l/3hYdt5HEBjr9ImqDbxP1BLqd5qIB1A
CSEp8WkD8D8k4mHqBNUdQClYUleeeOw/rWCL16B9HkCPcKXUElroPw2SUDXs
Ih9Ak9hYAVys4z+IDAciQtYfQD7+43bFC9w/XDcX+Mw+IECiPghISbjQPwKN
oyZ+mSBAasEQFMyZrz8TvH0Nh/IgQCRzj7b8asG//l4Q5ZBFIUA+7EHGTUnU
v3emGwSgnyFA9Qbi0Zsd4L/KYd8TsPMhQH6RUuXFPuW/q8Eba8VOIkBnT6K9
eCfqv/f6pXoyqCJAr5GUA+gr7r8eqOh6oPsiQPv84tD+i/C/0vmjwhNWI0Am
ca0ye6Lxv2G/F/uHqiNAsCv24MAn8r8yFFD6//8jQKTNZjsrLvK/QbndWg==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 10.}, {-1.1362716980337177`, 
                    1.1394809338151983`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj5T/NoYAADwP1t+433D
3cQ/06KH59s08T8/lvq2a77VPw3Qz2CQ//E/UPQI4wkn4D/YbRJcUDvyPzg0
cm9ZVOU/p57sAsn68T/3vGVz/fHqP7g3G2z/LPE/r0FwQdgX8D/uWrvXzuXv
P07J8gTc7vI/hDD6Vu9G7D9JHOSKnbj1P8xGHtB82+c/GA6ZlmZS+D97ealb
jBTjP1IkE95ZJPs/CoSsQxCs2j9g2VCrVMb9P0E5SzYiY84/5ax+nYYtAEAe
/tax5lKsP1B/NwP4kwFAcdTepxVlwr8lIdIrbeICQN7qmslX1tS/MFVPcvdM
BEBz6gEyy2jgv+nuA5rgsAVATsadd+zK5b8MWJqEzfwGQJa354h9Oeq/ZVMT
jc9kCECOextVSUDuvygebljVtAlAu3pwn8mV8L8he6tB8CALQCHGilCuqfG/
xz0gDGqGDEAMknJx6C3yv9fPdpnn0w1ApVw8usMp8r8d9K9Eej0PQGzYQR5c
mvG/53NlWYhHEEB0QAJv2ZXwv5WgDgED7RBAyuY991BN7r9eFqk3iKARQK5x
itDETOq/3HO0Tw9IEkCFetqJwtXlv3Uasfag/RJA2Tk3mXFX4L/lc0kO4q8T
QPKwCJ7Q5dS/CrVSByVWFEDCW0ZeGajCv0o/TY9yChVAkvqdS4Piqz8/sbj4
wbIVQBUpGis6t84/C9a/0sBXFkBN+VxWs5jaP/JDuDvKChdA4qcbYWYA4z+O
mSGG1bEXQMyJCfy6zec/RTh8X+tmGED8cV1tsErsP7G+RxoDEBlAAa7EJjWw
7z/0965FyrUZQFAqwHxGF/E/UnoHAJxpGkD5Csu/6u/xP2Xk0JtvERtAeKGv
CcI68j+Tl4vGTccbQP8GOtqr/vE/l/3hYdt5HEBjr9ImqDbxP1BLqd5qIB1A
CSEp8WkD8D8k4mHqBNUdQClYUleeeOw/rWCL16B9HkCPcKXUElroPw2SUDXs
Ih9Ak9hYAVys4z+IDAciQtYfQD7+43bFC9w/XDcX+Mw+IECiPghISbjQPwKN
oyZ+mSBAasEQFMyZrz8TvH0Nh/IgQCRzj7b8asG//l4Q5ZBFIUA+7EHGTUnU
v3emGwSgnyFA9Qbi0Zsd4L/KYd8TsPMhQH6RUuXFPuW/q8Eba8VOIkBnT6K9
eCfqv/f6pXoyqCJAr5GUA+gr7r8eqOh6oPsiQPv84tD+i/C/0vmjwhNWI0Am
ca0ye6Lxv2G/F/uHqiNAsCv24MAn8r8yFFD6//8jQKTNZjsrLvK/QbndWg==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 10.}, {-1.1362716980337177`, 
                    1.1394809338151983`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 10.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "[", "t", "]"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.665209231365814*^9, 3.665209259448735*^9}, 
   3.665215371881728*^9, 3.665215405844431*^9, 3.6652170458485756`*^9, 
   3.6652234119341087`*^9, 3.66523829305683*^9, 3.6652530882163243`*^9, 
   3.6652532039951677`*^9, 3.6653223804829674`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"th1", "[", "t", "]"}], "/.", "sol1"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", "10.0"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.658653957681642*^9, 3.658654005488559*^9}, {
   3.6586540806448603`*^9, 3.658654147605914*^9}, {3.6586568294737177`*^9, 
   3.6586568296217976`*^9}, {3.6652092656968117`*^9, 3.665209279223555*^9}, {
   3.6652153987304096`*^9, 3.665215399314803*^9}, 3.6653223857296777`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
zpjazL9/bDA5uHqt5goS/wcoRQ4J
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.658654106661843*^9, 3.658654148311386*^9}, {
   3.658654252810523*^9, 3.6586542770827246`*^9}, 3.65865559874502*^9, 
   3.658656708916192*^9, 3.6586567761118417`*^9, 3.658656834760453*^9, 
   3.658656932200554*^9, 3.658656982612565*^9, 3.6586570643705573`*^9, 
   3.658659820512681*^9, {3.6586600549455786`*^9, 3.65866008236304*^9}, {
   3.658660121893066*^9, 3.658660139981883*^9}, 3.6586602056294613`*^9, 
   3.6586602479749937`*^9, {3.6652092683747396`*^9, 3.665209279951069*^9}, 
   3.6652153741649446`*^9, 3.6652154093058915`*^9, 3.6652170522051044`*^9, 
   3.66522342108659*^9, 3.6652530928766484`*^9, 3.6652532061656923`*^9, 
   3.665322386412162*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"deltat", " ", "=", " ", "0.1"}]], "Input",
 CellChangeTimes->{{3.6652094836650953`*^9, 3.665209487369726*^9}, 
   3.665217054986065*^9, 3.6652234239396443`*^9, 3.6652249393709393`*^9, 
   3.6652383061471224`*^9, 3.665238795746604*^9, 3.6653223888338976`*^9}],

Cell[BoxData["0.1`"], "Output",
 CellChangeTimes->{
  3.665215381931472*^9, 3.665215413724024*^9, 3.6652170557425995`*^9, 
   3.6652234243459053`*^9, 3.665224940061427*^9, {3.6652383020802355`*^9, 
   3.665238306477357*^9}, 3.665238796443115*^9, 3.6652531163553076`*^9, 
   3.665253211092205*^9, 3.665322389281198*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"times", " ", "=", " ", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "10", ",", " ", "deltat"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.665209728934678*^9, 3.6652097859901853`*^9}, {
   3.665215384189089*^9, 3.665215388002767*^9}, 3.6653223918250313`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"expth1", " ", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"th1", "[", "t", "]"}], "/.", "sol1"}], ")"}], "/.", 
     RowBox[{"t", "\[Rule]", "times"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.665209317658841*^9, 3.6652093786575527`*^9}, 
   3.6652094786585484`*^9, {3.665209623182158*^9, 3.665209679332477*^9}, {
   3.66520971568327*^9, 3.665209716723011*^9}, {3.6652097976334443`*^9, 
   3.665209818106505*^9}, 3.665215419432105*^9, {3.6652384662681484`*^9, 
   3.6652384743458805`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"results", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", "expth1", "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6652383702526317`*^9, 3.6652384559088235`*^9}, {
  3.665238499274576*^9, 3.665238535065984*^9}, {3.665238616876058*^9, 
  3.6652386328934264`*^9}, {3.665253179925065*^9, 3.6652531841810865`*^9}, {
  3.66525323929521*^9, 3.6652532415868654`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<sho_0.1.csv\>\"", ",", " ", "results", ",", " ", "\"\<CSV\>\""}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6652153183811474`*^9, 3.6652153427694597`*^9}, {
   3.6652154910529165`*^9, 3.6652154938739185`*^9}, {3.6652157708079033`*^9, 
   3.665215776392909*^9}, 3.665217067500945*^9, 3.665223458386075*^9, 
   3.6652249553895845`*^9, {3.6652386528956275`*^9, 3.665238676045664*^9}, 
   3.665238824770852*^9, {3.6652531900412464`*^9, 3.665253191719437*^9}, 
   3.665322401874138*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Coupled SHO", "Chapter"]], "Chapter",
 CellChangeTimes->{{3.665253276688755*^9, 3.6652533051369476`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"L1", "[", 
    RowBox[{"th1_", ",", " ", "th2_", ",", "  ", "w1_", ",", " ", "w2_"}], 
    "]"}], ":=", " ", 
   RowBox[{
    RowBox[{"w1", "^", "2"}], " ", "+", " ", 
    RowBox[{"w2", "^", "2"}], " ", "-", " ", 
    RowBox[{"2", " ", 
     RowBox[{"th1", "^", "2"}]}], " ", "-", "  ", 
    RowBox[{"th2", "^", "2"}], " ", "+", " ", 
    RowBox[{"2", " ", "th1", " ", "th2"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6586537159031615`*^9, 3.6586537644736257`*^9}, {
   3.6586542680393095`*^9, 3.6586542695403748`*^9}, 3.658655590115903*^9, {
   3.658655778766946*^9, 3.6586557833392124`*^9}, 3.6586559023075953`*^9, 
   3.658656019711851*^9, {3.65865616318163*^9, 3.658656175896629*^9}, 
   3.658656540589708*^9, 3.6586569142708683`*^9, 3.658656968816779*^9, 
   3.6586570396550245`*^9, {3.658658707960973*^9, 3.658658713020562*^9}, {
   3.658659060419589*^9, 3.658659114435053*^9}, {3.6586592108894987`*^9, 
   3.658659212966942*^9}, {3.6586592446444397`*^9, 3.658659246435711*^9}, {
   3.658659355873336*^9, 3.6586593920909977`*^9}, {3.658659534877283*^9, 
   3.6586595601352215`*^9}, {3.6586596080171843`*^9, 3.658659617424858*^9}, {
   3.665208604985362*^9, 3.6652086791212554`*^9}, {3.665238066774853*^9, 
   3.665238103771119*^9}, {3.6652528889278717`*^9, 3.6652529111146374`*^9}, {
   3.665253389269697*^9, 3.66525344390448*^9}, 3.665253531799844*^9}],

Cell["Generate the Euler Equations", "Text",
 CellChangeTimes->{{3.658654209411753*^9, 3.658654214393259*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol2", "=", 
  RowBox[{"EulerEquations", "[", 
   RowBox[{
    RowBox[{"L1", "[", 
     RowBox[{
      RowBox[{"th1", "[", "t", "]"}], ",", " ", 
      RowBox[{"th2", "[", "t", "]"}], ",", "  ", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"th1", "[", "t", "]"}], ",", "t"}], "]"}], ",", " ", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"th2", "[", "t", "]"}], ",", "t"}], "]"}]}], " ", "]"}], ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"th1", "[", "t", "]"}], ",", " ", 
      RowBox[{"th2", "[", "t", "]"}]}], "}"}], ",", " ", "t"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.658653797652131*^9, 3.6586538261593523`*^9}, {
  3.65865422687311*^9, 3.658654227572606*^9}, {3.6652092456209354`*^9, 
  3.6652092507996116`*^9}, {3.6652381145897923`*^9, 3.6652381532472363`*^9}, {
  3.665252998990996*^9, 3.6652530142168026`*^9}, {3.6652535557212257`*^9, 
  3.6652536105201263`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"th1", "[", "t", "]"}]}], "-", 
       RowBox[{"th2", "[", "t", "]"}], "+", 
       RowBox[{
        SuperscriptBox["th1", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], ")"}]}], "\[Equal]", 
    "0"}], ",", 
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"th1", "[", "t", "]"}], "-", 
       RowBox[{"th2", "[", "t", "]"}], "-", 
       RowBox[{
        SuperscriptBox["th2", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], ")"}]}], "\[Equal]", 
    "0"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6586538266096706`*^9, 3.6586542310060573`*^9, 3.658654276972645*^9, 
   3.658655597677266*^9, 3.6586557473156567`*^9, 3.6586557954167566`*^9, 
   3.658655910965726*^9, 3.65865603832607*^9, 3.658656180597965*^9, 
   3.6586565464058475`*^9, 3.658656919489539*^9, 3.658656972847652*^9, 
   3.6586570517746196`*^9, 3.658658771898347*^9, 3.658658840376951*^9, 
   3.658658983930501*^9, 3.658659262912388*^9, 3.6586594149502125`*^9, 
   3.658659494628745*^9, {3.6586595396336517`*^9, 3.6586595931706247`*^9}, 
   3.658659643413263*^9, 3.658659742185336*^9, 3.6586598017143326`*^9, 
   3.658660027187875*^9, {3.6586600589494195`*^9, 3.658660081570448*^9}, {
   3.658660121793996*^9, 3.6586601398718185`*^9}, 3.658660205555398*^9, 
   3.658660247826889*^9, 3.6652087455536346`*^9, 3.665209203921316*^9, 
   3.6652092515661345`*^9, 3.6652153692952833`*^9, 3.665217040243614*^9, 
   3.665223409389288*^9, 3.6652381566886787`*^9, {3.66525298772901*^9, 
   3.6652530153666277`*^9}, 3.665253055787306*^9, 3.665253201742552*^9, {
   3.6652535828554864`*^9, 3.665253591539654*^9}, 3.665253651779412*^9, 
   3.665322408278698*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol3", "=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"sol2", ",", " ", 
      RowBox[{
       RowBox[{"th1", "[", "0", "]"}], "\[Equal]", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"th1", "[", "1", "]"}], "\[Equal]", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"th2", "[", "0", "]"}], "\[Equal]", " ", "2"}], ",", " ", 
      RowBox[{
       RowBox[{"th2", "[", "1", "]"}], "\[Equal]", " ", "1"}]}], "}"}], ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"th1", "[", "t", "]"}], ",", " ", 
      RowBox[{"th2", "[", "t", "]"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "10.0"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.658653894638954*^9, 3.658653935838148*^9}, {
   3.65865398197488*^9, 3.6586539993762445`*^9}, {3.65865405974304*^9, 
   3.658654069911276*^9}, {3.658655681544752*^9, 3.6586557051404953`*^9}, {
   3.6586567692789927`*^9, 3.658656771115325*^9}, {3.6586568169097843`*^9, 
   3.6586568170879335`*^9}, {3.6652087940760503`*^9, 3.665208811111162*^9}, {
   3.665209210456953*^9, 3.6652092568278694`*^9}, {3.6652154029733925`*^9, 
   3.6652154031375165`*^9}, {3.6652382620478354`*^9, 3.665238291720912*^9}, {
   3.665253077709873*^9, 3.6652530854493604`*^9}, {3.665253601164484*^9, 
   3.665253642090564*^9}, 3.665322411386917*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"th1", "[", "t", "]"}], "\[Rule]", 
     RowBox[{
      TagBox[
       TemplateBox[{RowBox[{
           StyleBox[
            TagBox["InterpolatingFunction", "SummaryHead"], 
            "NonInterpretableSummary"], 
           StyleBox["[", "NonInterpretableSummary"], 
           DynamicModuleBox[{Typeset`open$$ = False}, 
            PanelBox[
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj7jQpUIAADwP1t+433D
3cQ/POJnv8R68D8/lvq2a77VPxq8kpPH6PA/UPQI4wkn4D9Afxd10SLxPzg0
cm9ZVOU/z94LXaAc8T/3vGVz/fHqP7U+oAHrufA/r0FwQdgX8D9Uk7TOfe7v
P07J8gTc7vI/rKdlHJBQ7T9JHOSKnbj1P+zWtv8iuuk/GA6ZlmZS+D8c/hKR
IH7lP1IkE95ZJPs/PzTEWM8E4D9g2VCrVMb9P+yUXy8KbdQ/5ax+nYYtAEAj
Nca33STAP1B/NwP4kwFAbYjfV1Hjt78lIdIrbeICQK5rVYvsNtO/MFVPcvdM
BECSptkwV5fgv+nuA5rgsAVAC9wTdC795r8MWJqEzfwGQKgzJ4StVey/ZVMT
jc9kCECczAhL0KHwvygebljVtAlA3jwMnc518r8he6tB8CALQCMTgOY/4vO/
xz0gDGqGDEBiW8loRrX0v9fPdpnn0w1AeD3JkTj89L8d9K9Eej0PQGE6h6Pw
zPS/53NlWYhHEEC18G8J5z30v5WgDgED7RBArW6GuGdp879eFqk3iKARQKBm
nrtTS/K/3HO0Tw9IEkA730eSfCTxv3Uasfag/RJAvnXJyrPA77/lc0kO4q8T
QE+zZXwEaO2/CrVSByVWFEBoNopJonbrv0o/TY9yChVArCXVTfW06b8/sbj4
wbIVQDZtAfg5bOi/C9a/0sBXFkDpGHCHz3nnv/JDuDvKChdATBbXOWa55r+O
mSGG1bEXQAs1sG+XLOa/RTh8X+tmGEBwh05Cf5blv7G+RxoDEBlA1b0WdWfj
5L/0965FyrUZQEdM7dqd5+O/UnoHAJxpGkCROqPenVfiv2Xk0JtvERtAIdAH
HzpK4L+Tl4vGTccbQOMhHqDooNq/l/3hYdt5HEBewg914yjTv1BLqd5qIB1A
xqo3EfOAxb8k4mHqBNUdQGDWIFglWGm/rWCL16B9HkDCgrbkqYzFPw2SUDXs
Ih9A1U8zjX9H1j+IDAciQtYfQBXkRCYzl+E/XDcX+Mw+IEDG01pPW5bnPwKN
oyZ+mSBA5tedVE7N7T8TvH0Nh/IgQAJ6JL2OrfE//l4Q5ZBFIUDzRK0i/Orz
P3emGwSgnyFABe5jxFTe9T/KYd8TsPMhQBk2JOgxLPc/q8Eba8VOIkAj3iqL
N/r3P/f6pXoyqCJA9wtI8M4j+D8eqOh6oPsiQPliDATnv/c/0vmjwhNWI0Ag
ECicg8n2P2G/F/uHqiNAUJtiQiR09T8yFFD6//8jQB0P/YAjxPM/mAPYSA==

                    "]]}}}, {
                    DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 10.}, {-1.311577386357241, 
                    1.5087422739022693`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj7jQpUIAADwP1t+433D
3cQ/POJnv8R68D8/lvq2a77VPxq8kpPH6PA/UPQI4wkn4D9Afxd10SLxPzg0
cm9ZVOU/z94LXaAc8T/3vGVz/fHqP7U+oAHrufA/r0FwQdgX8D9Uk7TOfe7v
P07J8gTc7vI/rKdlHJBQ7T9JHOSKnbj1P+zWtv8iuuk/GA6ZlmZS+D8c/hKR
IH7lP1IkE95ZJPs/PzTEWM8E4D9g2VCrVMb9P+yUXy8KbdQ/5ax+nYYtAEAj
Nca33STAP1B/NwP4kwFAbYjfV1Hjt78lIdIrbeICQK5rVYvsNtO/MFVPcvdM
BECSptkwV5fgv+nuA5rgsAVAC9wTdC795r8MWJqEzfwGQKgzJ4StVey/ZVMT
jc9kCECczAhL0KHwvygebljVtAlA3jwMnc518r8he6tB8CALQCMTgOY/4vO/
xz0gDGqGDEBiW8loRrX0v9fPdpnn0w1AeD3JkTj89L8d9K9Eej0PQGE6h6Pw
zPS/53NlWYhHEEC18G8J5z30v5WgDgED7RBArW6GuGdp879eFqk3iKARQKBm
nrtTS/K/3HO0Tw9IEkA730eSfCTxv3Uasfag/RJAvnXJyrPA77/lc0kO4q8T
QE+zZXwEaO2/CrVSByVWFEBoNopJonbrv0o/TY9yChVArCXVTfW06b8/sbj4
wbIVQDZtAfg5bOi/C9a/0sBXFkDpGHCHz3nnv/JDuDvKChdATBbXOWa55r+O
mSGG1bEXQAs1sG+XLOa/RTh8X+tmGEBwh05Cf5blv7G+RxoDEBlA1b0WdWfj
5L/0965FyrUZQEdM7dqd5+O/UnoHAJxpGkCROqPenVfiv2Xk0JtvERtAIdAH
HzpK4L+Tl4vGTccbQOMhHqDooNq/l/3hYdt5HEBewg914yjTv1BLqd5qIB1A
xqo3EfOAxb8k4mHqBNUdQGDWIFglWGm/rWCL16B9HkDCgrbkqYzFPw2SUDXs
Ih9A1U8zjX9H1j+IDAciQtYfQBXkRCYzl+E/XDcX+Mw+IEDG01pPW5bnPwKN
oyZ+mSBA5tedVE7N7T8TvH0Nh/IgQAJ6JL2OrfE//l4Q5ZBFIUDzRK0i/Orz
P3emGwSgnyFABe5jxFTe9T/KYd8TsPMhQBk2JOgxLPc/q8Eba8VOIkAj3iqL
N/r3P/f6pXoyqCJA9wtI8M4j+D8eqOh6oPsiQPliDATnv/c/0vmjwhNWI0Ag
ECicg8n2P2G/F/uHqiNAUJtiQiR09T8yFFD6//8jQB0P/YAjxPM/mAPYSA==

                    "]]}}}, {
                    DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 10.}, {-1.311577386357241, 
                    1.5087422739022693`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic], 
             BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
           StyleBox["]", "NonInterpretableSummary"]}]},
        "CopyTag",
        DisplayFunction->(#& ),
        InterpretationFunction->("InterpolatingFunction[{{0., 10.}}, <>]"& )],
       
       False,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "[", "t", "]"}]}], ",", 
    RowBox[{
     RowBox[{"th2", "[", "t", "]"}], "\[Rule]", 
     RowBox[{
      TagBox[
       TemplateBox[{RowBox[{
           StyleBox[
            TagBox["InterpolatingFunction", "SummaryHead"], 
            "NonInterpretableSummary"], 
           StyleBox["[", "NonInterpretableSummary"], 
           DynamicModuleBox[{Typeset`open$$ = False}, 
            PanelBox[
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj5pKKvh////P1t+433D
3cQ/b394AhMP/j8/lvq2a77VP8UjZt+8jPs/UPQI4wkn4D8cteA9wef4Pzg0
cm9ZVOU/Pp4B3lIb9j/3vGVz/fHqP5aT7FXG7PI/r0FwQdgX8D8defbmpMjv
P07J8gTc7vI/U8xPYSg36T9JHOSKnbj1P446I8iU4+I/GA6ZlmZS+D+SnS1X
kFfaP1IkE95ZJPs/1nV363jezD9g2VCrVMb9Pw+1lU9Fda4/5ax+nYYtAEDM
hLI+OrW4v1B/NwP4kwFAVNW3MnKY0L8lIdIrbeICQLG1vyKfBdq/MFVPcvdM
BEDFxaP90ATiv+nuA5rgsAVAkXkgPOHj5r8MWJqEzfwGQKyIU+8Fb+u/ZVMT
jc9kCEBGyZrGezHwvygebljVtAlA/UTQlxeE8r8he6tB8CALQGKk2phzB/W/
xz0gDGqGDEDGaP0aynX3v9fPdpnn0w1AirJn7g2n+b8d9K9Eej0PQDihHOEf
4/u/53NlWYhHEED+sBoDfcb9v5WgDgED7RBAiWoqBhRg/79eFqk3iKARQKVe
COXFYADA3HO0Tw9IEkCDvyROqNIAwHUasfag/RJA8gzf5zAOAcDlc0kO4q8T
QJrlwIV+AQHACrVSByVWFECHfgvCZrIAwEo/TY9yChVAaHMwLt8RAMA/sbj4
wbIVQJBFOoE5bv6/C9a/0sBXFkDio2OsT0f8v/JDuDvKChdAQycXxfF1+b+O
mSGG1bEXQEuyi69Ccfa/RTh8X+tmGECDHu7LFdXyv7G+RxoDEBlA4rOqEh93
7r/0965FyrUZQKcLn9L8Jue/UnoHAJxpGkBXqOOjdUHev2Xk0JtvERtA5TZC
Nerjzr+Tl4vGTccbQEAai2zV3lQ/l/3hYdt5HEAJFs344gbNP1BLqd5qIB1A
ng0gHeoP2z8k4mHqBNUdQMJ78m5dxeM/rWCL16B9HkCGgreKoQrpPw2SUDXs
Ih9AEljPC26x7T+IDAciQtYfQPrtSB4XGfE/XDcX+Mw+IECJBUHfFPjyPwKN
oyZ+mSBAvPY17yjI9D8TvH0Nh/IgQNG3VluvYfY//l4Q5ZBFIUBp2piagr73
P3emGwSgnyFAjkRbgKIb+T/KYd8TsPMhQCTbhCYKSvo/q8Eba8VOIkC7lAlK
FHn7P/f6pXoyqCJAtIxSAL2G/D8eqOh6oPsiQCx16zdZY/0/0vmjwhNWI0D3
ry+mryb+P2G/F/uHqiNAw7VwxB2o/j8yFFD6//8jQINGD5u86f4/0RDVfA==

                    "]]}}}, {
                    DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 10.}, {-2.131929217810119, 
                    1.9999998870066753`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj5pKKvh////P1t+433D
3cQ/b394AhMP/j8/lvq2a77VP8UjZt+8jPs/UPQI4wkn4D8cteA9wef4Pzg0
cm9ZVOU/Pp4B3lIb9j/3vGVz/fHqP5aT7FXG7PI/r0FwQdgX8D8defbmpMjv
P07J8gTc7vI/U8xPYSg36T9JHOSKnbj1P446I8iU4+I/GA6ZlmZS+D+SnS1X
kFfaP1IkE95ZJPs/1nV363jezD9g2VCrVMb9Pw+1lU9Fda4/5ax+nYYtAEDM
hLI+OrW4v1B/NwP4kwFAVNW3MnKY0L8lIdIrbeICQLG1vyKfBdq/MFVPcvdM
BEDFxaP90ATiv+nuA5rgsAVAkXkgPOHj5r8MWJqEzfwGQKyIU+8Fb+u/ZVMT
jc9kCEBGyZrGezHwvygebljVtAlA/UTQlxeE8r8he6tB8CALQGKk2phzB/W/
xz0gDGqGDEDGaP0aynX3v9fPdpnn0w1AirJn7g2n+b8d9K9Eej0PQDihHOEf
4/u/53NlWYhHEED+sBoDfcb9v5WgDgED7RBAiWoqBhRg/79eFqk3iKARQKVe
COXFYADA3HO0Tw9IEkCDvyROqNIAwHUasfag/RJA8gzf5zAOAcDlc0kO4q8T
QJrlwIV+AQHACrVSByVWFECHfgvCZrIAwEo/TY9yChVAaHMwLt8RAMA/sbj4
wbIVQJBFOoE5bv6/C9a/0sBXFkDio2OsT0f8v/JDuDvKChdAQycXxfF1+b+O
mSGG1bEXQEuyi69Ccfa/RTh8X+tmGECDHu7LFdXyv7G+RxoDEBlA4rOqEh93
7r/0965FyrUZQKcLn9L8Jue/UnoHAJxpGkBXqOOjdUHev2Xk0JtvERtA5TZC
Nerjzr+Tl4vGTccbQEAai2zV3lQ/l/3hYdt5HEAJFs344gbNP1BLqd5qIB1A
ng0gHeoP2z8k4mHqBNUdQMJ78m5dxeM/rWCL16B9HkCGgreKoQrpPw2SUDXs
Ih9AEljPC26x7T+IDAciQtYfQPrtSB4XGfE/XDcX+Mw+IECJBUHfFPjyPwKN
oyZ+mSBAvPY17yjI9D8TvH0Nh/IgQNG3VluvYfY//l4Q5ZBFIUBp2piagr73
P3emGwSgnyFAjkRbgKIb+T/KYd8TsPMhQCTbhCYKSvo/q8Eba8VOIkC7lAlK
FHn7P/f6pXoyqCJAtIxSAL2G/D8eqOh6oPsiQCx16zdZY/0/0vmjwhNWI0D3
ry+mryb+P2G/F/uHqiNAw7VwxB2o/j8yFFD6//8jQINGD5u86f4/0RDVfA==

                    "]]}}}, {
                    DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, 
                    PlotRange -> {{0., 10.}, {-2.131929217810119, 
                    1.9999998870066753`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic], 
             BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
           StyleBox["]", "NonInterpretableSummary"]}]},
        "CopyTag",
        DisplayFunction->(#& ),
        InterpretationFunction->("InterpolatingFunction[{{0., 10.}}, <>]"& )],
       
       False,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "[", "t", "]"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.665209231365814*^9, 3.665209259448735*^9}, 
   3.665215371881728*^9, 3.665215405844431*^9, 3.6652170458485756`*^9, 
   3.6652234119341087`*^9, 3.66523829305683*^9, 3.6652530882163243`*^9, 
   3.6652532039951677`*^9, {3.665253645201744*^9, 3.665253654437315*^9}, 
   3.6653224392982817`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"th1", "[", "t", "]"}], "/.", "sol3"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", "10.0"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.658653957681642*^9, 3.658654005488559*^9}, {
   3.6586540806448603`*^9, 3.658654147605914*^9}, {3.6586568294737177`*^9, 
   3.6586568296217976`*^9}, {3.6652092656968117`*^9, 3.665209279223555*^9}, {
   3.6652153987304096`*^9, 3.665215399314803*^9}, {3.665253667757756*^9, 
   3.665253668119012*^9}, 3.665322446241214*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.658654106661843*^9, 3.658654148311386*^9}, {
   3.658654252810523*^9, 3.6586542770827246`*^9}, 3.65865559874502*^9, 
   3.658656708916192*^9, 3.6586567761118417`*^9, 3.658656834760453*^9, 
   3.658656932200554*^9, 3.658656982612565*^9, 3.6586570643705573`*^9, 
   3.658659820512681*^9, {3.6586600549455786`*^9, 3.65866008236304*^9}, {
   3.658660121893066*^9, 3.658660139981883*^9}, 3.6586602056294613`*^9, 
   3.6586602479749937`*^9, {3.6652092683747396`*^9, 3.665209279951069*^9}, 
   3.6652153741649446`*^9, 3.6652154093058915`*^9, 3.6652170522051044`*^9, 
   3.66522342108659*^9, 3.6652530928766484`*^9, 3.6652532061656923`*^9, {
   3.66525366080482*^9, 3.6652536689806232`*^9}, 3.665322446659524*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"th2", "[", "t", "]"}], "/.", "sol3"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10.0"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.665253673776046*^9, 3.6652537033100204`*^9}, 
   3.665322449169306*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwV13k4Fd8bAPC5ES2yzFyESHekkhYUUjlvK4qKSpTsylKpEEXWIrQi2ldJ
2fpRQjFjyVKkUghRooTshHvv3N98/5rn85w5c868877nfWaes7eV2xQMw1Q5
GPbf9Xaws4SOa6zxWPCpZpFIhO7s7TXao+6B8sa5wzf+idBXi5jj6uon0Tf5
tNXa/SLkb2IrPVU9GnUVnnDVaRWhzWVg92/uddQc4/qh/JUIZYSviBiY+wRx
jXBxDT8R+uGUqfB3bj7i/K642vidQYGWXo49c6tQgsFmVHxbiJgIfaW281Xo
huPDbavihCg0l/Pp00QVagt0GHkcKURnVK5tKKh7i+5d4i728Baii51lmtFR
1ejzvekOQSBE906q/dXsr0Xlr7qL+r4L0M8PXWt0HOrQGVpx3lYVAZo+cbPq
0NImdKtxeJF2wCQ6VhJyvvf4T6TPcX7srvEPLU2O//g88w8yCWoqNUgZRp3b
3Oe0GQ6g0W8zPCcC+1GScqTqfcdh9KKpxG+9bhdadTwvS6x6DFW6nUMfQ76j
0oabO7wXTKJTbXaRLrGfkM55xni2mRAtGUNRhYJcZPLLqG35HgyeVq3es+ZB
IfV7Se6mkV4O6KcfSApXr6MCBdF6r0+JgdhSh29xqJWSlOvy2KU1FXokiqcN
SHVSU2ummswslICVTlrq6y91U/z3GYfijk0DA5eOZxKmA1TnnkwlNbUZcCnt
gVWE8TC17tyRw5UZM6HduW7xfmaUusrkTd/gMAu+TTfc/bhznNo3p9S8ZVga
quN3pSce51PdhweHXkxKwyPJgCsLTvOpAGru9UscGdDKVL+VE8WnEp2DOtfL
yACTvpF5fYtPfUpdGfxESwZcet9PxpfzqS0rU7NOOMmAcZz2wBYlAWW07QIu
VysDb6Cx/1aBgJKiF/fydssCc6LUpqpbSLVft6wMsZGFV+1+Mv8bFlIvffyT
W/bJwrYMrOWKQEg5Lyi1S3SWhZjqF3HG0gz18uLemulHZeFBz7LADToM5bw/
OnMgRhaIP4zdsB9D5U3+OlpEy8JzzRs30ycY6uJnKQuVMlkIGi1Ke8QRUS6Z
uosCKmShw1cxJ3G6iJJ2Dv6h814WXJRrIxyV2PEqeatHzbLg35u8Is6QHb+2
Ue/8mCyMRZtzD/iJKLeVD0ZtteUgFbfeGNclomIuysucXiYHaxSDf0zpF1GZ
v88tvKcrB/cDxS94jYqoseve+34ZysHgz5STOAejzzFrio9vkgO5skW3b87C
6KcVDedj7eXAKDW37s98jO6znaVReFkO+m/vJO13YjSeE7r2e7wcLHKJzJG1
xmh9qRFrsSQ5WHDXsrXIBqNDipqizW7LQXJ93Ngse4yWJVP7vzyRgw0zbepP
uGO0bu/6V30lcjDUZR58NAij/YMDrNRH5eBL8KrVf+9h9MLeIKmocTmYdSw4
0OghRjfahpX/5ctB/cFxpfBHGG24Msbo1RQcxB03OmNPMXq85ybPWhYHyaty
uXnZGH3KlhqKXYxD1GzF+fKlGK1VUZo+tBSHKZX1ZyXeYHTTisoDtro4rC+2
mT5UjtGrZT82aa7CIdrGwvPlW4wWlLeXFG/GYbtU8HL+R4wOXiER/88Jh4c9
ZyiXNoxe+mCGhb0bDu52uSmj3zG6VUZG8o07DsE5i0+GtWM06lEMjPPGoSoh
8VNkJ0ZjDxa5LDmNw+fd1nyTHox+JrNUNSEUh/B9x76n9mK042ndhskIHN5U
ZCSK9WF0sc3qrZUxOHzLqvVIGcDocBkLPZdrOOgJblrdH2Xjd9ryb9VNHM7G
R7p/GMPo9u7dj5ffxYFLJ+hP/MPoDeX2KswjHPIGR/sMJjFa/PRRses5OIRq
1wR5MBj9vNu3UJSLw1LJFyI3EUa72pz0P1CAA2f/IM8O49BleuE9esU4tPNb
jFdO4dBnu+Pr3r/HYcbr2qAbUzn0mYbOt/yPbPx+VZy3lmBdZlCy8AsOy81b
JqUkOXT4neZn4c04JGn6d7lP49BhsUtSs1pxuD0r0UV6OocODQi52/IDh1iV
KSsyWQdbkRf1u3AoeK9a3TKDQ59GfmddenC46n72ktdMDh2kXRF0uQ+HlNlP
746wPiXh5dU9gsMC9/Lbo1Ic+uTwa2fFcfZ9265GHZ7FoQO+S+/dyMehhfz0
oo31iYJs0zscAij8cEO2NIf2eywO78QJ6MDLygkZDu2bYG0wLknAulsBQ0dY
+4SlLp0/kwB85RWbMtbHj0zOt5ImQC989j9ClkMf22euGiJHgPFW1er9rI+a
3uGmcwnIDs7+cv8/rxyY+VWRgFn6/XLfWXvz1otJqBAwlN8XPFuOQx+RSZjU
VSNgU+QH5a3/WdA56DCPgB3b8n76sz78x+DPeQ0CfmLvG+6wPlQf/T1/AQHH
q9eOUqy9SpsbfmkRYEgaGjWz9ny2pJZYSsAeajB5gLXH7ZBy0CFAkPJQD8M5
tHvMx8LDKwg4uTy2Yzrrg/7kixsGBByS6H4xi/UBV7/0CiMCvi2WSJnJ2s2y
4uHIWgLC+ItyxFi7GivdnLeO3Y90cvMo+3yXxV5x2zYSkGBdodrO2nl2YXSg
CQFmi3v8K//zVJmw1C3s/du9ulJZOw05BnyxIMBt+PHhCNaObdneUywJGMme
KmHzn6vFDy7bRUDFzb9Zmqwd8q3t7fYQMH9JjUc/Gz/7lNTd0XsJsNuroJvN
en/8pHnufgLyzyNJb9Z2oeYbfzqy+31U+ns+6717B3TXHiRAyae1LIz9frYm
67U8PQmYviusSJO1zYqEeUmHCbjun1T4hs0Ha2lD2UEfAki3g+WDbL7s5kdL
qvkT0OhhWRPMeldXM7PlFAHntGU+T2W9syTkb3IoAZ8eXWvmsPlnlfWx42ME
AdtR/tcTbH5a3SJbmEgCvPfu+dTJ5vOOExVvbS4QYHq1K+N/bL6ba8mkSt0g
YAZ49mBsvdhWeqcuus1aXmhtxtbTgQMfUjffY+Opd70/lq230AdXnoSmELCw
5P5DkRiHfq7MTRvJJsBrQcPEPbZei/N80+RyCQiZDHhWwNbze+svaUvzCXA/
xMS+Z+u9Ky4x3Z0ioP/qSEaHAKPnzFTKbHnHzhc3O/N2HKMXPTmZOfGend/3
0PQFe37omzRlKnwiYDi9XusGe77siLiZtaORAI5T3CarEYw+w1f9X1kHAR5h
4lRgP0b39vCepwvZ+lJLnp/TgdET0RHPqzAuuHqLHUM/MVpiYcfzX2Jc4NeF
1L75gdHqro9eqM/gAvDoUroVo3e1LHiZoMCFC5GDgd6NGP26WrsgaBkXjOeV
vc9iz+MqzwsF13W5cPntPcVvlRhdP62vIHclF5RPHzssXoHRAxuzXg2s5oJu
oQRax573GoU6ha6mXLhinO7r8wqjL2To0+ZOXAiISpIuYPuFpuNCpwxXLrQX
vJxrk4rRRbjyFGl3LswtSVraz/aXAX/hhtojXMjRHdw07T67v/VlFZZBXChu
7LX/lcjGr8Gy1jqJC1yX20eswjD6RfSGoy9vcIHhfPAJDcbobWtWys2+w4XI
c/MCHwdidOj92Tu/JnNB445a3Hc/jO7waqvfl80FlTmtA4wHRqdjh1sda7hg
/2uQ83cHRm/KsQ8p/sCFM5TD8TQLtr+47VDnfeaCaXZLv/MWtp++03P+2cSF
gxop8oUbMNr36mSnWxcXPk9aL1DTZ/uZ1rm/nmLyoKjxenuCEka/3flQ4LtK
Hqp6ZrVn54qo7LPtTTfXyEO8au1L8SwRdePlvPwSJA8vpG1fbXksojxV7vnJ
bpYHenzcOidJRE3/easvzUoe+If+LP/nL6JMjyd+b/eSh3ufEwhzfRH15nJ0
2Y477Ho4/G/dU4ZKL6l84H9fHu5eanWZe5+hEkYkw+4ky4O0kcWzwSSGcrWJ
XNv7VB5az93S9D3LUOLqEblRL+UhwUGFP+DAUOuzglKLPsjDcVxquAZnKLrG
+7y2mAKY+90NWXFUSK3gwswkCQVoreOcfecqpFL3ysZwZijAyDjv025bIXXp
97OoelkFaFT5un/jeiFlzxkKD1VTAIPL60ajCSElWOF78vMqBdiS+W9OYY6A
WnUr4EDQUQUo52NnRrv5VLZnGFR/U4AWzxOhbvqT1Apnx0rNHwowtGZ3vPnC
SSrXFu0I61AAtW95FouUJ6l8U6GDfo8CzD5s0FIqnKBozZMh98YVoM5OzSa4
bIKqaT9a5EsoQuPQyVTZHRNU117HNapmihA4N9qsx2GcUtuKDI88VwStZX/6
El3HqA0iu4i7QbOhsWrkg7/TEOVaTw3l7VaCD2IjrsYePZRxWPgLJ3VlkGs1
HZNya6fivAdfSf1WhiAzMQuDBXVUe+ijX3eLVKDP7uPE20tnqB63fNeSqDlQ
Yr/A/bROLRo4jEvWOKmCqceHzXZ5bSjT7J3gwBI1ePyVF/P5+i/0y325vtio
GlTl3nrm79OLlNOa4qNq5kKIyuCPW8wAinA8/qBmqzqkXa9O+rN2GP0TKF3Y
mq8Ou8q3CLQdRtHCV0nX32rMg6T6VeIGhv/QSpc32+Wi50EPvFOnyscRfUt+
dvXoPFg758kPW8tJtJCWj9m2jwfPHTOjn9zjozVKbtda7HjwumtXzrlHfGR5
/HmKpz0Pttufz3J7ykenNHaWRjrx4Kdpq6LScz6qPndZUHSQB4uHJY+6VfDR
McuZ3st8efB0rbZn3F8+KmjHdsle4MGrZfHJSwwFyGJqr+qnIh4Ymj/IqX8j
QKldEYIwmgfX9rvk+LwVoCnVKs06JTxo0G22mVUrQHlxW69decODsaSoCP1G
AeKpp+GW1TwwcXVucegWoDEjT8kPX3mQo5CfOkNaiO4c7RqoGeFBYj51866V
EI3vDK09PcaDJb0RdpXWQrTTYHbmknEeeBsaaf3dK0TTGBOvC3weDEndbdBy
EaLjsY87zaeQsJff+MvPR4hMUg40vZMhIe6MxoLN8UI00NxRWqVFwszVz3xS
a4VoKJgsttMmwTfxyP4ZdUI0Ms+5qH8JCarZTavd69n1D7blyeuQ4CF2tFTx
mxBhI18znAxI6Ne877epW4hkpWqTJjaQ0LzaVLlBjEHL1+R7LdpPwmL1OVue
6TFIt+2f+2t7ElamWyyO0mfQinD9A9sdSfCvGXWwXcUgw8ocRz8XEu4/fpLZ
b8wg2JW5u9iDhCFcZPHTjEE7Dj1EtidIcNno1vfDnkHety4Q0ZdIuNu6aYri
WQZVczT6t1whQbmjLfZSFIO0Dha8lYonYXLE1JMTw6AOnd9hlxNJqMKyJT5e
ZJBNBQwk3SahuO9op9o1Bq0fGq5OSSPh4oCV95EnDLq7JybVPYOE0w1PHgak
MUjwWv2MVhYJ4jHOzwIzGPQyymJ1ZjYJnLJEvUP/Y5C26uMnL/JJiN4kMXUs
j0EKpnsjyypIMLyb0P+onEE+GQNOkVUkDJulTayqZNAHPGqt6TsSzLKm2JdX
MSj2W87Iu/ckSL6ulK+sZhDmM8ul7gsJuMqAy5FPDNrf+ND4agMJJ/S2O5fV
MahgrZHynq8kbCy+HIh/YZDftIMfm1pISNKVbEtsYFD3bRq1/yRBLb4lFrUw
yERsj0pyJwlhTp4Ru78xKNn975jbbxKMlvtbu7QyyEFPOfNPNwkPfZy8D3xn
0Otrz6LTekmQl/J8tO8Hg5SZzW6H+0gQhJkmmbYz6HOlz5zBQRISr3dcnN7B
IJ2lM8azh0n2f+jTmW+sL8bfq/MdJcEydlzhSSeDzOxrYsbHSQAl2wHN3wxK
KXU5UDBJQoFJzYKvrMUXTa4LErD7iextDu9ikNPFy6rGDAnofb24xh8GFQ1r
TohEJOjuzrjxmvX/ASyZciA=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6652537039564505`*^9, 3.6653224495675883`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"deltat1", " ", "=", " ", "0.1"}]], "Input",
 CellChangeTimes->{{3.6652094836650953`*^9, 3.665209487369726*^9}, 
   3.665217054986065*^9, 3.6652234239396443`*^9, 3.6652249393709393`*^9, 
   3.6652383061471224`*^9, 3.665238795746604*^9, 3.665253717101782*^9, 
   3.6653224544620485`*^9}],

Cell[BoxData["0.1`"], "Output",
 CellChangeTimes->{
  3.665215381931472*^9, 3.665215413724024*^9, 3.6652170557425995`*^9, 
   3.6652234243459053`*^9, 3.665224940061427*^9, {3.6652383020802355`*^9, 
   3.665238306477357*^9}, 3.665238796443115*^9, 3.6652531163553076`*^9, 
   3.665253211092205*^9, 3.665253717794289*^9, 3.6653224549334087`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"times1", "=", " ", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "10", ",", " ", "deltat1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.665209728934678*^9, 3.6652097859901853`*^9}, {
   3.665215384189089*^9, 3.665215388002767*^9}, {3.665253720554261*^9, 
   3.6652537259260464`*^9}, 3.6653224572930555`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"expth11", " ", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"th1", "[", "t", "]"}], "/.", "sol3"}], ")"}], "/.", 
     RowBox[{"t", "\[Rule]", "times1"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.665209317658841*^9, 3.6652093786575527`*^9}, 
   3.6652094786585484`*^9, {3.665209623182158*^9, 3.665209679332477*^9}, {
   3.66520971568327*^9, 3.665209716723011*^9}, {3.6652097976334443`*^9, 
   3.665209818106505*^9}, 3.665215419432105*^9, {3.6652384662681484`*^9, 
   3.6652384743458805`*^9}, {3.665253745463497*^9, 3.6652537533721046`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"expth12", " ", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"th2", "[", "t", "]"}], "/.", "sol3"}], ")"}], "/.", 
     RowBox[{"t", "\[Rule]", "times1"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6652537581905236`*^9, 3.6652537835375166`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"results1", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"expth11", ",", " ", "expth12"}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6652383702526317`*^9, 3.6652384559088235`*^9}, {
  3.665238499274576*^9, 3.665238535065984*^9}, {3.665238616876058*^9, 
  3.6652386328934264`*^9}, {3.665253179925065*^9, 3.6652531841810865`*^9}, {
  3.66525323929521*^9, 3.6652532415868654`*^9}, {3.665253790059146*^9, 
  3.6652538098572054`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<sho_coupled_0.1.csv\>\"", ",", " ", "results1", ",", " ", 
     "\"\<CSV\>\""}], "]"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6652153183811474`*^9, 3.6652153427694597`*^9}, {
   3.6652154910529165`*^9, 3.6652154938739185`*^9}, {3.6652157708079033`*^9, 
   3.665215776392909*^9}, 3.665217067500945*^9, 3.665223458386075*^9, 
   3.6652249553895845`*^9, {3.6652386528956275`*^9, 3.665238676045664*^9}, 
   3.665238824770852*^9, {3.6652531900412464`*^9, 3.665253191719437*^9}, {
   3.6652538032304955`*^9, 3.6652538131865635`*^9}, 3.6653224677935123`*^9, {
   3.665654569455961*^9, 3.6656545695480547`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pendulum attached to a mass on a spring ", "Chapter",
 CellChangeTimes->{{3.665654580376164*^9, 3.66565461077565*^9}, {
  3.665665630915926*^9, 3.665665641776927*^9}}],

Cell[TextData[{
 "Mass M moves horizontally while attached to a spring of spring constant k. \
Hanging from the mass is a pendulum of arm length L and bob mass m\n \t\t\t\t",
 StyleBox["http://physics.ucsd.edu/students/courses/winter2008/physics110b/\
LECTURES/CH06_LAGRANGE.pdf ",
  FontFamily->"Helvetica",
  FontColor->RGBColor[
   0.8546730754558632, 0.8546883344777599, 0.8546730754558632]]
}], "Text",
 CellChangeTimes->{{3.6656656680878696`*^9, 3.66566571859286*^9}, {
  3.665665819131695*^9, 3.66566582755412*^9}, {3.665665895207306*^9, 
  3.665665952189434*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"m1", " ", "=", "  ", "1"}], "\n", 
 RowBox[{"k", " ", "=", "  ", "1"}], "\n", 
 RowBox[{"l", " ", "=", "  ", "1"}], "\n", 
 RowBox[{"m2", " ", "=", " ", "1"}]}], "Code",
 CellChangeTimes->{{3.665666051348586*^9, 3.665666060523979*^9}, {
  3.665666106036004*^9, 3.665666125970182*^9}, {3.665666192040495*^9, 
  3.665666262324739*^9}}],

Cell[BoxData[
 FormBox["1", TraditionalForm]], "Output",
 CellChangeTimes->{3.6656662719432287`*^9}],

Cell[BoxData[
 FormBox["1", TraditionalForm]], "Output",
 CellChangeTimes->{3.665666271947844*^9}],

Cell[BoxData[
 FormBox["1", TraditionalForm]], "Output",
 CellChangeTimes->{3.665666271951832*^9}],

Cell[BoxData[
 FormBox["1", TraditionalForm]], "Output",
 CellChangeTimes->{3.665666271955554*^9}]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnQdgFFUTx6X3EEISqiDFXlCpglRFUVGk96JUQRCQ3sHeK/YGCBYQBMWG
YEUs+ImK2EAUbICACgLJlfn2/+7mMveylwspJJfMD5932b57u/+dNzPvvTpX
X9dlWNHjjjvu+tLO/7pcNbnt+PFXTe1a3Pmj3dQJQ68u5nypUOS44650CiaS
oiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoigFDr/fbz6PHDlC
Bw8epAMHDpjPw4cP5/GRKYqi5C+gl1yAz+cjr9dLCxYsoEGDBlG/fv1owIAB
dM8995h5APMVRVEUSqefKKNGjaIiRYpQ0aJFCc1YL7/88tB8XlZRFEVJ00X+
HD16tNFOaChKp06djN0ptVZRFKWwIfUPmsj18tTUVPOJv0eOHGnsTi6wP1U7
FUVRwmFNZPsTjBkzxtidxYsXpxIlSoT0k+criqIoRB6PxxQGOgn/J/s+oaOs
n0DjR4qiFGakzWnHjwD0k7WzWLFiYfV3ua6iKIoSzrXXXhvyfdr2p6IoihIZ
qZ8yfqQoiqJkjOqnoihK1lD9VBRFiUxGeqj6qSiKkjVUPxVFUbKG6qeiKErW
UP1UFEXJGqqfiqIoWUP1U1EUJWuofiqKomQN1U9FUZSsofoZO7j9LrH2Wx3t
8cba+SmFC9XP2AS/EY8T4NZXa7Tf0J7PfRXKvrdyq/9C7kNR7ovPQfYPJo/D
7hMMfYDb0xTlWKP6GXvY2oa/MW5qdvSOxxO09Si3+tHGdqGjso/ESMfP81D+
+++/0Hoosj9bRTnWqH7GLjwG4FdffUWLFy/OEVuMtwH7Ljf7z2ZdluMUys9D
hw6ZY8D8lJQUMw3auWrVKvruu+90fEMlX6D6GZtwnRdacv3119Ovv/6arf6u
5Tqsn1nd1tHsU9bTUfbu3Uvvvfceffrpp7R+/Xpas2ZNyPZE+eGHH+jWW2+l
Xbt2ha2rKHmB6mfscuTIETN+1aZNm8L8hNmBNQ0238aNG3Ol/m6PicB2NOri
DzzwAD388MP0008/Gbt6/PjxtHz58jBf6MqVK2nSpEmqn0qeo/oZm0A7YKdN
mDAhpD/Z0RI55hW29fvvv5uxrXMDt9gVpu3cuZOaN29O3377rZmO43j77bep
SZMmxr/L6+J7mzZtzPJ23ElRjiWqn7HLjTfeSKtXrzZ2W07YYuzvxOf27dup
f//+uToOq9w2/AVPP/00NWzY0Ogjn8dvv/1GVapUoY8//jgsjnTTTTfRU089
lWvHpiiZQfUztuDf5u+//6Z+/fqZOq7tu4Qu7dmzhxYuXEgPPvggrVixgl55
5RVjr9lxe7e8IZQdO3ZQ3759w+Yxch1pt8InuXTpUrr77rtNPOvrr782f991
1120du3a0HKy3i61f/DgwcbW5GlYFt8rVapETzzxRNhxf/jhh9StWze9V5U8
RfUzNkEdd8iQISaewnrDOgTtw7zHHnvMaNBnn31mdOn5558P8zdyXd32Q6JA
a/v06WP2ZeuknMbrw2aEXv/yyy/GZuzcubPxXcKPinvsnnvuCdsXx9YBT+/U
qRO1bt067FzwWaFCBbO+1HvEmc455xwTk9f7VckrVD9jE8R2hg8fbuIsgLUQ
MaWpU6ca7cN3/JaIZXfo0IG++OKLMJ3k/Ml///2XPv/8c7NNaC2+v/rqq9Sx
Y0czDX9zkb5JqYeI/yNejmnQ0LZt29Ibb7xhdBLrcX6ALDKPE2B/WE/Gl6CP
FStWpDvvvDNUf+f41rnnnmt0XlHyCtXP2MDOTfrkk09oxIgRIf1kbfnmm2+o
UaNGps4OjQGoQ/fu3dvoGtef2Y8Idu/eTY888kioIP4N/2KzZs1o/vz5Zhp/
wt/KNqBs/4R8TdbDdevWUbt27cyx2fatnZsv7Uz4WxEXksvDDxEXF2eOSa4H
Xcbxbd26NfcvvqJEQPUzNoEtOWzYsJB+cnvGl19+mRo0aGDsMvwNDUW+5Lhx
44zPlLWJc9Khefj+zz//mPn79u0z3zdv3kw9evQw0/bv32+m8TLA7R5h/YTf
YODAgfTXX3+la2PKPk+7TSbKzTffHPJ/Mtu2baOEhAR67bXXQvV+fMK2Puus
s4zPVVHyCtXP2AS6gngL6tOsW9Am+Djbt29v7DaAPCTYdY8//rjxlaJe7pbz
I21DbA/1bY4f8bK2Dspp0Er4XeELgN8TPoSDBw8avUM9HscLzYTusa5yjj5r
6Y8//khnn322sZNZQ5G/VK9ePaPr8jhwXqy1mgOq5BWqn7EJ/IKIEcG3KW04
6CnsRsS+oYHINb/00ktNbOfJJ5802sWwL9FuA8Q+TMT3ga1PbrrbvXt36tq1
q4mLw1cAfyVsYNixy5YtC+ku8uNr1qxp/KxynwB6OmrUKFqwYIGxdeFXmDhx
Is2dOzfs3LE8zgv+C0XJS1Q/YwvpB33ooYfomWeeSedHfP311009/q233qL3
33+f3n33XWOXwpaTfk87Z5T/xvyff/45TD/t/fN33h72h33A1kQcCT5XtL2E
znGMHGXDhg00ZcoUo+d2/J/1H35WHDNsZcTdoaV8jrxf5PajLXxu5qcqSjRU
P2MP1snvv//e+Bnt3CP8jXo0YjqslRzfkfmWbnmc/B31/9tuuy3qcchYOnKY
4EvFd9iS0D0gjw3TUU9HPqqtnbzsgQMHjH6jjo7t2X3Z/fnnnybOBL+s6qeS
l6h+xhZSZ6Al0DjO63TL05T90rF28nzp87S1DPNR14+mT3Y8SsaFpG9SajZs
Svgz7ZwCuc1IbarwHb6BF198Udu/K3mO6mf+x01fWBdhz8HfiH6YOB7DsKYB
u5842VaT4dg44Dh3pH7iIt0j0hbmZTgPFftC/Zx9n7xv1tlIfXnKdwJ8Avfe
e29Y/1B6vyp5hepn7MIahZwitB2X01Bf57/tfE1pY0bqfxP6JPs3zugYeBtS
cwHnn9o2rN2Gib+79TMvp6Nejzwm2K6y/3lFyStUP2Mb2+/pFuuxfZu2Vskc
zaPRJDf/pdyPrLOzVsv1ZH97ckwPt5wAea6MjIUpSl5Q2PXTTS/s8XlAfo5T
ZDTuhf0pzyPa3xltUy5nx6FsvY607Yy0V06zj5E/c6K/U0XJDoVJP92eSfm8
SruJl4n1/iWze9zyekifZVa3m5vXMVZ/IyV2KUz6KYlmd9nzM4pv5DVH83tl
5bflc3fzWx7tdnPy3ioM96mSvyms+gncYsVymsyXLMyw/xJI30ZuUVjuPyX2
Kaz6aefmyHg0/x2pFCZsP+PkyZOP+XUobNdciR0Kq36CSHEO9HuBNi7bt283
bWgKq3YyXH/HJ/ry0NwhRQlQ2PVT+j6hEWi3yP0Poz8M5GvL5QsbbH+yDVqn
Tp10+UiKUlgpzPrJyJwctOFGn0Zjx46l2rVrmz4sIuVR2tMKKvI9c8IJJ4Sm
KUphR/UzPWg3g76JMZYE+oGT+iH7b89MvmRBAufL+qkoSuHVT7f8G54G/yf6
8UXfRvgOZO6S7fuz250XVFQ/FSWcwqyfkc4TfQdXrlzZ9NsrddPuh832nxZ0
VD8VJZzCrJ+Rpj/11FNUq1Yt0yewzHHCuLzo083W3sISS1H9VJRwCqt+2khb
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
KPjOxxZJ0zGPt8vHimny3FDQrh7T2ZaS/hD7/cDfsSzW5eP5L3he2E7I7gzT
Gue44I888h89OnMatXe0cVBSRRrj6OHEyqVoUuWSzmdJ57M0TU4oS1MqlTFl
ckJpZ1pgftonfy9l1pkY/M7zJjvbmJIQKBMrlKAJFUrR9YnQ6Ti6NKE8zRjQ
i1L+2R/wt/pCSaHBdk+eYG6TP9Redt++feYeku8W2wbFslgOBd/591DtVCJh
a6RtU0kdyIjs6Cf2uXv3bvrqq69M20b0+bZy5Ur65JNPaOPGjfTmm2/SihUr
aM2aNfT555/Tn3/+GXq+gbQ///77bzPW+vvvv0+rVq0y66DNz2effWa2gfL6
66+bv9H+3K6ncoG2ob/4devWmfZCr7zyCq1fv57+97//mWNE3/GrV682x/jT
Tz+FrSuvIbRo69at5niwHRwTtonzwPhHmIZzxXyMkwQdc6uH83bee+890+8I
1sP6uGbYHs4L44LgXLEc6670a6NAJ3C8aB+F64DzwPls/HwjbfjkY3OeLzvb
enfdO/TN5m/Me4N//4CeOnqVepjmT55IrUsVpxHJ8TTZ0c/p8SVoRnwxmlax
CE1zPqdXLEoz4qIXLDfdWQdlBkpckeC8YjSzQjGaHVecZpcvSnMrOtpaoTiN
qRpPV1QqS7P696SUf/eG6WfA/gzko3p9AVsSv9edd95p+r+66qqrQv0MyN8I
36GZN910E/Xr18+MFYB7jp+PwtCvS0ElM79bVn9b+czzfYT3LjRh06ZN5lnE
fWVrrBtZ1U88z++8845p84iC+xb9vUG/+N7FM4yxgLHcE088QXfffbfpIw42
F58HdAfHPX/+fDM2GzTlxx9/NNvhZwXLoH3lhx9+aMbGvOWWW4yeQXP5OmJZ
nDv6nkOBLn333XdmGb5OOGboPTT42WefNc/nkiVLzHFL/YQeYj84nhdffJG+
/fZbcz3ZHsV2YBtBA3k7GFsO5yr9ANgupt96661mP+jXae/evSFbGstiO198
8YXRVRz3k08+ac6VtY+3g/XRHyk+cfy7du0K2Juw5X0BG/nbLVtopaPFaLOP
3+TrzV8Z2zNg78P+PEyPTJlM7cuWolGOfk6JL00zyhejORWL0yxHA02J41KU
ZlVAKUKzUeLSPudUwPzjQmW2U+ZUcEpwHi97g7ONGxx9nuZsf3RiaepUsSTN
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
Uh1b9Aj9smMbnXtuA6oUX5F++WUHGZk0UukPhIpMvAkT8JnqfHrI4zkS8H8G
7VX2k5Kp76ea6Rp/VxjVTyUast6a//KXAmqW6uif1+R4ehwNTQ0U5/u8OfOo
ZLEyNGf6jfTbz3vo640/0Bfrt9B3X2ynv/84SJRCgVC7iT852/AcDulk0LoN
6qcnOJ3n5Y9zV/IW1U8lGjJ2gv7eFy5cmNeHlA4TETJxc0cDvSmBmJBjX/6y
7VeKK5lE9aqeQb06DqXObQfTFS0GU4/219LVXSbSrdMfpM2f/Ui+w84WPF5j
g8L+DLVNCumnN5TX5A/GnhRF9VOJhhz/CHD/yfkJ0wbesTdTPYdMLB7V8d9+
2kf9Oo+gpDInUlyR2nRChUZ0TrWOdHZSZ2pUvTedW607nVn1Mmp1Vlda+MjL
dHBfSqBuH4pJyRbv+L+p9JMvLKqkFGZUP5VoyPgR+k5G+/L8do+EtR1y/vt9
+17q1mE4nZjYmhrVuYIqH3c61SjZhJrU6EXnVR9MzaoMp0bJQ52/B9NZVbpR
zbJN6Yv3vzX1eW9quHaKXkvM9gP6qSiqn0p0ZP7ShRdeSI0aNcrWPZJR3/JZ
2Qb3+WHaZXp99Ocve2lE36lUt2IbalSzNzWs2pPqlb2Qqh7XlE6Lu5KaVR1G
LaqNpeZVrqdmSWPpvGrX0jnJfahaiYa0fMEa8qcE4kzo04lr6nb+pz4jClD9
VKIh8+dlPT6r94nsf4S3nZZL5A+zd+3+6/hvmXsU6P/Da8xDzyEPPf3AUjox
vhU1rNLb0crhdF6VYdQ4uT9VP64l1StziWN3DnamjaNmlSfQ+UnTqXniZGqW
fC2dndidapdvRD9s+gVuUKOfKc52PSZHX/VTSY/qpxINqV133nknzZkzJ0fi
77Yes0ZDX22fKy8rx3cPlEC/INBQb6qf9v62ny5p2texJ7tQi6rX0PmOjXl+
ZUcrE4dR3ZIdqGqR1nR6pV6Oro6h5kmTqVXiLGoeP8NZZjKdX+0aOrlCO5o4
fK6xQdn+9PqDbZt8qptKOKqfSiTc+g/BGBmcv5QdpA7ic+3atbR48WIzFtzv
v/9OK1eupEceeYTeemuNo6c+2rZtG722+jV64fnnzTLh+e9ek8PpS/HTpg9+
oLrlz6emVQdRi6TrqFXSVGpRaZLzfSydGd+bkoq0oVqlL6Mm1UbReUkTqWWl
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
FEVRFEVRFEVRFEVRFEVRFEVRlMLB/wG7EFX/
    "], {{0, 269}, {336, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJyVeQk4Vd/X/z7njoZruuZ5nmeZM88Zu2YR1zwP1yWkwZAKDSQlSiFj0SAk
JYSKZCgUSoMQlYqU8T2ovr//9/2/z/u8+z7n3M9Ze621P3vvdfbe614h7wiS
PwwAiMYjNxJ5jwGFQo63RyMPhvFUP28IAZw8yA3wcJIjI0NhJgDCwqkUkpmh
oIurmyBuHEDIhxFoAlGyT3SkgZ2dFfgfy49BsOEQDMht+Pqf9f6/hdnXL9oH
AMgOwd6+0T5hCK4FAM3tE0mhAoDpReQie6iRG3gewawUhCAA2I2OsQZsYd4N
7L2FFTd1HEhGCDYGAE9PJlMCAGDY8C8Y6xOA+GGIROpYwn2DwhHVVATr+gSS
fQHgfoDoyIaFRWzgOQRLev+Hn4D/x6f3X59kcsBfvNWXzYI3DoqODCXH/x+H
438vYaExf9oQRi76QIo5aaPPyLiVh0RYbmB6BDeFe9vYIpgFwQ+DfDf1N/DL
wBhzx9/6sz7RRsiYAXYAYOBLNrZEMDKWMHtMiKPBb6xMpmzaIvqwTRDVwuE3
9qZEkH77h2P9ok3s/+BAPwur3z6PhIfa/MEX/INMLRCMRBpcmxDo4LzFE34Q
G+Rkg2AGBPdGh9hb/tZ/lRBoZPNHhxJD2uAsiuB5f4opaUsHxRkW/adfKHkf
8iYHTgTrUwMdzLdsUS5+0S5Wf7j5+hmbbHFA+fqFO/7mjEKiy5D02zYtMtTu
tz7qgl+oGWlrnFHXomPt/9j2U5EA2xoH1Ntg8g67Lf6oH5FUO4ctbmg0sAJG
wBgIghjk8gYRIBgE9czWzyJPWzWmgAwoIAD4Abnfkj8Wzps14cjdHiSATwjy
A9F/7Qw3a/1ALCJf/SvdussB/83a2E2LEPABwWFobrQuWhtthdz1kUsZrYHW
/GMnyPinVawJ1hhrjjXFSv3l4YOwDkUuCgj677J/LDEfMH2Yt5jnmHHMC2CJ
1Pohfd5gGP63Z07g/aaX38+eQcmUfzEXBNZgHLEz/d07b8R6+o8OWhxhrYo2
ROsg/BHuaHY0N5BDb0N6YoDWQ/qmikj/k2HMXxb/jOW/29vg9599/C1nkGZQ
/c3C+y9/o79a//Zi9B9j5It8W/5bE3UEdRPViWpBPUI1oeqBIKoZ1YDqRt3d
wH8j4f1mJPxpjbTJLQTxE/RHR7FKcVpx5b+1Tv7NgLI534DqF0fdeCGMIiLj
KUEBgVRBA2RF9hO0CPeRlxVUVlRSA2Bjfd9aPr6TNtdtiP3pP7KwFAA0c5B3
Zdc/Mp9xAOq/AkDz4R+ZGNIaQyIAHTM+MZTYLdnG9gIwgBbZN1gBF+AHIkAS
6ZMyUAPaQB+YgB3AFjgAV7AbGfVAEIaw3gMSQRJIAxngJDgNzoFCUAzKwVVw
A9SDJtACOkAX6AXPwQgSGxNgBsyBH2AZgiAcRICIEBckAIlBMpAypAHpQiaQ
FUSCXCEvKAAKh2KgRCgFyoCyoXPQJagCug7dhlqgR1Af9AJ6A01D36AlGAXT
w6wwHywOK8AasAFsCTvAHnAAHAUnwKnwcfgsXARfgevgFrgLfg6PwzPwAgqg
6FDsKCGUHEoDZYSyRbmh/FEU1H5UOioXVYSqRjUicz2AGkfNon6hsWgiWhAt
h8SnOdoR7YOOQu9HZ6LPocvRdegH6AH0G/Qceg1DwPBiZDBaGAuMCyYAsweT
hsnFlGJuYdqRN2oC8wOLxbJjJbDqyLvpig3G7sVmYs9ja7D3sX3Yd9gFHA7H
hZPB6eBscWQcFZeGy8NdwTXj+nETuJ94OrwAXhlvinfDh+OT8bn4Svw9fD9+
Er9Mw0QjRqNFY0vjSxNPc4KmhKaR5inNBM0yLTOtBK0OrQNtMG0S7Vnaatp2
2lHa73R0dMJ0mnQ76YLoDtKdpbtG95DuDd0vehZ6aXojenf6GPrj9GX09+lf
0H8nEAjiBH2CG4FKOE6oILQRXhF+MhAZ5BksGHwZDjDkM9Qx9DN8ZqRhFGM0
YNzNmMCYy3iT8SnjLBMNkziTEROZaT9TPtNtpiGmBWYisxKzLXMYcyZzJfMj
5ikWHIs4iwmLL0sqSzFLG8s7IoooQjQi+hBTiCXEduIEK5ZVgtWCNZg1g/Uq
aw/rHBsL2zY2J7Y4tny2u2zj7Ch2cXYL9lD2E+w32AfZlzj4OAw4/DiOclRz
9HMscvJw6nP6caZz1nA+51ziEuQy4QrhyuKq5xrjRnNLc+/k3sN9gbude5aH
lUebx4cnnecGz0temFeal8S7l7eYt5t3gY+fz4wvki+Pr41vlp+dX58/mD+H
/x7/tABRQFcgSCBHoFngoyCboIFgqOBZwQeCc0K8QuZCMUKXhHqEloUlhB2F
k4VrhMdEaEU0RPxFckRaReZEBUStRRNFq0RfitGIaYgFip0R6xRbFJcQdxY/
LF4vPiXBKWEhkSBRJTEqSZDUk4ySLJJ8JoWV0pAKkTov1SsNS6tKB0rnSz+V
gWXUZIJkzsv0yWJkNWXDZYtkh+To5QzkYuWq5N7Is8tbySfL18t/VhBVcFPI
UuhUWFNUVQxVLFEcUWJR2qGUrNSo9E1ZWtlHOV/5mQpBxVTlgEqDytdtMtv8
tl3YNqxKVLVWPazaqrqqpq5GUatWm1YXVfdSL1Af0mDVsNPI1HioidE01Dyg
2aT5S0tNi6p1Q+uLtpx2iHal9tR2ie1+20u2v9MR1iHrXNIZ1xXU9dK9qDuu
J6RH1ivSe6svou+rX6o/aSBlEGxwxeCzoaIhxfCW4aKRltE+o/vGKGMz43Tj
HhMWE0eTcyavTIVNA0yrTOfMVM32mt03x5hbmmeZD1nwWfhYVFjM7VDfsW/H
A0t6S3vLc5ZvraStKFaN1rD1DutT1qM2YjbhNvW2wNbC9pTtmJ2EXZTdnZ3Y
nXY783d+ICmREkmd9kR7T/tK+x8Ohg4nHEYcJR1jHFudGJ3cnSqcFp2NnbOd
x10UXPa5dLlyuwa5Nrjh3JzcSt0WdpnsOr1rwl3VPc190EPCI87j0W7u3aG7
73oyepI9b3phvJy9Kr1WyLbkIvKCt4V3gfecj5HPGZ8ZX33fHN9pPx2/bL9J
fx3/bP+pAJ2AUwHTgXqBuYGzQUZB54K+BpsHFwYvhtiGlIWshzqH1oThw7zC
boezhIeEP4jgj4iL6IuUiUyLHI/SijodNUexpJRGQ9Ee0Q1UVuSo0x0jGXMo
5k2sbmx+7M89TntuxjHHhcd1x0vHH42fTDBNuLwXvddnb2uiUGJS4pt9Bvsu
7Yf2e+9vPSByIPXAxEGzg+VJtEkhSU+SFZOzk+dTnFMaU/lSD6a+O2R2qCqN
IY2SNnRY+3DhEfSRoCM9R1WO5h1dS/dNf5yhmJGbsZLpk/n4mNKxs8fWj/sf
7zmhduLCSezJ8JODWXpZ5dnM2QnZ705Zn6rLEcxJz5k/7Xn6Ue623MIztGdi
zoyftTrbkCeadzJv5Vzguef5hvk1BbwFRwsWz/ue77+gf6G6kK8wo3DpYtDF
4Utml+qKxItyi7HFscUfSpxKOi9rXK4o5S7NKF0tCy8bLyeVP6hQr6io5K08
UQVXxVRNX3G/0nvV+GpDtVz1pRr2moxr4FrMtY/Xva4P3rC80XpT42Z1rVht
wS3irfQ6qC6+bq4+sH68wbWh7/aO262N2o237sjfKWsSasq/y3b3xD3ae6n3
1psTmhfuR96fbQloedfq2TrS5tL27MHOBz3tlu0PO0w72joNOpsf6jxseqT1
6PZjjcf1XWpddd2q3beeqD651aPWU/dU/WlDr2ZvY9/2vnv9ev0tA8YDHc8s
nnU9t3neN+g4ODzkPjQ+7Ds89SL0xdeXsS+XRw6OYkbTx5jGcl/xvip6LfW6
Zlxt/O4b4zfdb+3fjrzzeTfzPvr9ykTqB8KH3EmByYop5ammadPp3o+7Pk7M
RM4sz6Z9Yv5U8Fnyc+0X/S/dcy5zE18pX9e/ZX7n+l42v22+dcFu4dWPsB/L
i+k/uX6W/9L41bnkvDS5vGcFt3J2VWq1cc1ybXQ9bH09kkwhbx4FUMgF+/sD
8K0MAIIrAEQkj6Nl2Mq/fhcUtJF2ICkVkmcYI6eAAYgf8oAqYAC7wHdQEqhz
aA50AUYW04kNxwngBvCnabxo5enQdK/ovzIQGFWYdjEns1wnTrLxsrtynOEc
5RbjieS9x88oECB4T5hLhCLaJLYkoSYZKVUm/VIWJycnb6PgrxinlKR8SCV5
2z5VqlqA+k4NaU205iut29q522N0HHXV9Xj0Yf1ZgyHDdqNbxmUmBabZZunm
yRZ7d1Atw62CrP1sfG197Xx3BpLC7akO+xzTnI47n3EpdC1zq9lV597k0bq7
w7PL6yl5wHvIZ8T3rd9n/7VAYpBssHmIf+iRsCvhvRHzURwUjWhXalxMZmz+
nitx9+L7E6YT4X38+3UOeB5MSapMHkhZO8SfpnTY6Ijz0bD0wxklmZ3Hvpzg
O0nKyszuymE87Zibd2Y0j/ecW/6Zgt4L+EL9i3GXaoqmSoQvu5dSyg6Wn6wo
qmyo6r8yV02s0b4WdD3/xtNa/C31Oqd6asPJ21WNrXeeN03c/XpvqXm9BdWK
bsM+oGmn7cB1rHbOPux9VPaY0qXUNdmd9UT9yXhP1dOYXr0+fF9/f/6A7zP5
Z7+etw9mD5GHNV5wv1h9+WbkwejlsbRXfq8NxnnH5988flv4Lva93YQcEmVf
J19OPZpu+lg7c3322qebn6u/lM9d/dr2bW5eY6Fgkf/n3aXoFd01rvX1zRMj
F9gOokADRAsZQ0egIVgGToEnkLNVK3Leb8ZYYSawR3FquA/48zTutEK0s3Qz
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
l5G7h0f87lwk3+gnf/UR9PXyu+g/HigY5BlcEDIcxhxuHrE/8nrUu2g2qklM
UuyTOO744ISmRKZ9/vvvHeRIikruTpU4lJI2fkTnaGWGcGbBce4T+VkC2aU5
iqfvnrE6O3YuogB1/myh1yXNYvaSX6Xj5U8qm6/UVldfq7xRXltal9kQ2Uhq
UrnH0jzX0tN2tf1YZ8Qjxy7dJ1JPWXtX+l8/axzMHHZ4yTLSPhb5mjh+7a3F
u9GJsEnM1KmP7DOZswufSV/Oz418Y/yuPk9aCPoRvZjwM+FXzFLYstcKaVVv
TXadbXP+WYEm8AbHQAN4DzFD+lAkdAHqhL7CfLAlnABXwiMoBpQBKhZ1FfUe
zYt2QmehnyDzboHJxAxihbFR2DYcFy4a149XxxfTsNNk0bLRFtIp0Q3TpxJU
CVMMhYwuTKxM/cw5LC5EIeI31k62S+wHOHw4d3CpcYvz8PASeVf5PvD3CbQI
1gpVCZeKlIiWiV0Vr5fokByWmpFel2WVk5LXU3BUDFU6pFyocmfbuBpeXVnD
U/O41j3tOR0RXWe9TP1Wg59G0sa7TXJNe80JFjY7si1fWIvYRNg272QmediX
Onx3MnY+6/LVzW5XrYfA7hNeGHKS92dfDb8U/95AgaCo4PZQnrCY8P5I5ajT
lBWqX0zbHu646PievXKJJ/f9POB/8GWyQ8rgod1pM0cOHJ3IMMy8dBw64Xvy
UbbiqfzTNLkJZ77kBZx7V+B9/l0h6eL9IsXiS5eJpYfLViuolZ+uBFx9V0O+
9uaG982JW6F1iw0pjcx3iu+q3+u5H9SKb6tq39mx/LD8sUs37ZP2p0l9ev0r
z+oHw4eFXzwdiR1jf3V93PTN0Dvf958/OE6WTM18FJ6xmg36FPzZ94vxnMDc
26+Xv9l9+/X9/Lzi/IMFx4XhH24/xhadFrt/Gv6s/yX2K+vX6lLgUu+y6nLe
8uqK90rLqsDq/tWxNe2102tz6zvWSzbmP9pfRXlz+4DoDZHD5Kv19e/iAOCy
AVjNWl9fLlpfXy1Gko1RAO6Hbv23s7nXMAFQULKBOoxSD/77P5b/AlZC3vA=

      "], "RGB", "XYZ"], Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSizeRaw->{336, 269},
  PlotRange->{{0, 336}, {0, 269}}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"L2", "[", 
   RowBox[{"th_", ",", " ", "x_", ",", " ", "w1_", ",", " ", "xprime_"}], 
   "]"}], " ", ":=", "  ", 
  RowBox[{
   RowBox[{"0.5", "*", 
    RowBox[{"(", 
     RowBox[{"m1", "+", "m2"}], ")"}], "*", 
    RowBox[{"xprime", "^", "2"}]}], " ", "+", " ", 
   RowBox[{"0.5", "*", "m2", "*", 
    RowBox[{"(", 
     RowBox[{"l", "^", "2"}], ")"}], "*", 
    RowBox[{"w1", "^", "2"}]}], " ", "+", 
   RowBox[{"m2", "*", "l", "*", 
    RowBox[{"Cos", "[", "th", "]"}], "*", "xprime", "*", "w1"}], " ", "-", 
   RowBox[{"0.5", "*", "k", "*", 
    RowBox[{"x", "^", "2"}]}], " ", "+", 
   RowBox[{"m2", "*", "9.81", "*", "l", "*", 
    RowBox[{"Cos", "[", "th", "]"}]}]}]}]], "Code",
 CellChangeTimes->{{3.665654620572315*^9, 3.665654621652165*^9}, {
   3.665665729991304*^9, 3.665665778676056*^9}, {3.665665869857795*^9, 
   3.66566588432792*^9}, {3.665666770666379*^9, 3.66566680919205*^9}, {
   3.665666849758622*^9, 3.665666870391457*^9}, 3.665666949692635*^9, {
   3.6656670098556223`*^9, 3.665667191998494*^9}, {3.665667229350566*^9, 
   3.665667233613183*^9}}],

Cell["Generate the Euler Equations ", "Text",
 CellChangeTimes->{{3.665666713988833*^9, 3.665666733555415*^9}}],

Cell[BoxData[
 RowBox[{"sol4", " ", "=", " ", 
  RowBox[{"EulerEquations", "["}]}]], "Code",
 CellChangeTimes->{{3.665666697100814*^9, 3.6656667001645527`*^9}, {
  3.665666734803293*^9, 3.6656667514600897`*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->"EditBar",
WindowSize->{648, 697},
WindowMargins->{{Automatic, 62}, {Automatic, 0}},
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (October 9, \
2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 98, 1, 92, "Title"],
Cell[681, 25, 210, 4, 49, "Text"],
Cell[894, 31, 84, 1, 28, "Input"],
Cell[981, 34, 193, 5, 28, "Input"],
Cell[CellGroupData[{
Cell[1199, 43, 238, 3, 71, "Section"],
Cell[1440, 48, 1117, 19, 28, "Input"],
Cell[2560, 69, 110, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[2695, 74, 630, 14, 28, "Input"],
Cell[3328, 90, 1357, 26, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4722, 121, 1033, 20, 28, "Input"],
Cell[5758, 143, 11710, 228, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17505, 376, 601, 12, 28, "Input"],
Cell[18109, 390, 23801, 400, 229, 13674, 235, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41947, 795, 282, 4, 28, "Input"],
Cell[42232, 801, 318, 5, 28, "Output"]
}, Open  ]],
Cell[42565, 809, 302, 6, 28, "Input"],
Cell[42870, 817, 590, 13, 28, "Input"],
Cell[43463, 832, 408, 8, 28, "Input"],
Cell[43874, 842, 559, 11, 28, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44470, 858, 129, 1, 65, "Chapter"],
Cell[44602, 861, 1409, 25, 46, "Input"],
Cell[46014, 888, 110, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[46149, 893, 951, 24, 46, "Input"],
Cell[47103, 919, 1878, 41, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49018, 965, 1359, 29, 46, "Input"],
Cell[50380, 996, 23295, 455, 123, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73712, 1456, 649, 13, 28, "Input"],
Cell[74364, 1471, 15154, 257, 229, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89555, 1733, 394, 10, 28, "Input"],
Cell[89952, 1745, 6845, 123, 234, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96834, 1873, 309, 5, 28, "Input"],
Cell[97146, 1880, 342, 5, 28, "Output"]
}, Open  ]],
Cell[97503, 1888, 351, 7, 28, "Input"],
Cell[97857, 1897, 640, 13, 28, "Input"],
Cell[98500, 1912, 343, 9, 28, "Input"],
Cell[98846, 1923, 498, 10, 28, "Input"],
Cell[99347, 1935, 739, 14, 63, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100123, 1954, 173, 2, 65, "Chapter"],
Cell[100299, 1958, 571, 11, 104, "Text"],
Cell[CellGroupData[{
Cell[100895, 1973, 358, 7, 95, "Code"],
Cell[101256, 1982, 100, 2, 28, "Output"],
Cell[101359, 1986, 98, 2, 28, "Output"],
Cell[101460, 1990, 98, 2, 28, "Output"],
Cell[101561, 1994, 98, 2, 28, "Output"]
}, Open  ]],
Cell[101674, 1999, 34281, 567, 284, "Input"],
Cell[135958, 2568, 1104, 25, 50, "Code"],
Cell[137065, 2595, 111, 1, 30, "Text"],
Cell[137179, 2598, 211, 4, 50, "Code"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
